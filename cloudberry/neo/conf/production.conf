# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret = "Change me"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Defaults to Global in the root package.
# application.global=my.Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Uncomment this for the most verbose Akka debugging:
akka {
  loglevel = "DEBUG"
  actor {
    debug {
      receive = on
      autoreceive = on
      lifecycle = on
    }
    mailbox {
      requirements {
        "akka.dispatch.BoundedDequeBasedMessageQueueSemantics" = akka.actor.mailbox.bounded-deque-based
      }
    }
  }
}

play {
  ws {
    timeout {
      connection = 600000
      idle = 6000000
    }
  }
}

bounded-mailbox {
  mailbox-type = "akka.dispatch.BoundedDequeBasedMailbox"
  mailbox-capacity = 2000
  mailbox-push-timeout-time = 10s
}

actor {
  user.timeout = "500 seconds"
}

view.update.interval = "30 minutes"

view.meta.flush.interval = "30 minutes"

berry.firstquery.gap = "2 days"
berry.query.gap = "1 day"

asterixdb.url = "http://localhost:19002/query/service"
#acceptable values: "AQL" or "SQLPP" or "sparksql" or "SQL"
asterixdb.lang = SQLPP
asterixdb.view.meta.name = "viewMeta"

# WebSocket message size limit
# ~~~~~
# It is possible for the frontend to send very large queries to the Cloudberry.
# For example, when the resolution is extremely high in the TwitterMap,
# the frontend may send queries that contain a lot of cityIDs where the size
# can easily exceed the default message size limit of 65536 bytes.
play.websocket.buffer.limit = 5M